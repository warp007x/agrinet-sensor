#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_ADS1X15.h>
#include <Adafruit_AHTX0.h>
#include <FlowSensor.h>


#define SDA_ADC 37
#define SCL_ADC 38

#define SDA_1   11
#define SCL_1   12
#define I2C_ENB 13

#define type YFS201
#define pin 6 // pin -> interrupt pin

const int AirValue    = 20000;   //you need to replace this value with Value_1
const int WaterValue  = 7500;  //you need to replace this value with Value_2

TwoWire I2C_ADC = TwoWire(0);
TwoWire I2C_1   = TwoWire(1);

Adafruit_ADS1115 ads;  /* Use this for the 16-bit version */
// Adafruit_ADS1015 ads;     /* Use this for the 12-bit version */
Adafruit_AHTX0 aht;

FlowSensor Sensor(type, pin);
unsigned long timebefore = 0; // Same type as millis()
unsigned long reset = 0;

// int soilmoisturepercent = 0;

float temp = 0.0; 
float humi = 0.0;
float soil_m = 0.0;
float flow_r = 0.0;
float flow_v = 0.0;

void IRAM_ATTR count()
{
  Sensor.count();
}


void setup(void)
{
  Serial.begin(115200);
  pinMode(I2C_ENB, OUTPUT);

  digitalWrite(I2C_ENB, HIGH);
  delay(100);
  Serial.println("Hello!");
  Sensor.begin(count);
  delay(1000);
  I2C_ADC.begin(SDA_ADC, SCL_ADC, 100000); 
  I2C_1.begin(SDA_1, SCL_1, 100000);

  delay(400);
  if (!aht.begin(&I2C_1, 1, 0x38)) {
    Serial.println("Could not find AHT? Check wiring");
    // while (1) 
    delay(10000);
  }
  Serial.println("AHT10 or AHT20 found");

  Serial.println("Getting single-ended readings from AIN0..3");
  Serial.println("ADC Range: +/- 6.144V (1 bit = 3mV/ADS1015, 0.1875mV/ADS1115)");

  // The ADC input range (or gain) can be changed via the following
  // functions, but be careful never to exceed VDD +0.3V max, or to
  // exceed the upper and lower limits if you adjust the input range!
  // Setting these values incorrectly may destroy your ADC!
  //                                                                ADS1015  ADS1115
  //                                                                -------  -------
  // ads.setGain(GAIN_TWOTHIRDS);  // 2/3x gain +/- 6.144V  1 bit = 3mV      0.1875mV (default)
  ads.setGain(GAIN_ONE);        // 1x gain   +/- 4.096V  1 bit = 2mV      0.125mV
  // ads.setGain(GAIN_TWO);        // 2x gain   +/- 2.048V  1 bit = 1mV      0.0625mV
  // ads.setGain(GAIN_FOUR);       // 4x gain   +/- 1.024V  1 bit = 0.5mV    0.03125mV
  // ads.setGain(GAIN_EIGHT);      // 8x gain   +/- 0.512V  1 bit = 0.25mV   0.015625mV
  // ads.setGain(GAIN_SIXTEEN);    // 16x gain  +/- 0.256V  1 bit = 0.125mV  0.0078125mV

  if (!ads.begin(0x48, &I2C_ADC)) {
    Serial.println("Failed to initialize ADS.");
    while (1);
  }
}

void readFlow(){
	if (millis() - timebefore >= 1000)
	{
		Sensor.read();
    flow_r = Sensor.getFlowRate_m();
    flow_v = Sensor.getVolume();
		timebefore = millis();
	}

  // Reset Volume
	if (millis() - reset >= 120000)
	{
		Sensor.resetVolume();
		reset = millis();
	}
}

void readAHT(){
  sensors_event_t humidity, temperature;
  aht.getEvent(&humidity, &temperature);
  temp = temperature.temperature;
  humi = humidity.relative_humidity;

  delay(500);
}

void readSoilmoisture(){
  int16_t adc1, adc2;
  adc1 = ads.readADC_SingleEnded(1);
  adc2 = ads.readADC_SingleEnded(2);
  Serial.printf("adc1: %d, adc2: %d\n", adc1, adc2);
  int16_t adc_avg = (adc1 + adc2)/2;
  soil_m = map(adc_avg, AirValue, WaterValue, 0, 100);
  if (soil_m > 100)
    soil_m = 100;
  else if (soil_m < 0)
    soil_m = 0; 

    delay(500);
}

void loop(void)
{
  readAHT();
  readFlow();
  readSoilmoisture();
  delay(1000);
  Serial.println(temp);
  Serial.println(humi);
  Serial.println(soil_m);
  Serial.println(flow_r);
  Serial.println(flow_v);

  delay(1000);
}